{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 Summary \u00b6 A Client Registry holds patient identifers and may include patient demographic information. It is a necessary tool for the public health use cases that require managing patients, monitoring outcomes, and conducting case-based surveillance. Client Registries can be implemented in many ways. This implementation is an open source and open standards-based and offers the ability to: Assign and look-up unique identifiers, Allow connections from diverse point of service (POS) systems, such as electronic medical record systems (EMRs), that can submit messages in FHIR, and Configuration of decision rules around patient matching. Caution This implementation does not allow point-of-service systems to get patient demographic information stored in the Client Registry. This is also not a Shared Health Record, nor does it patient clinical data. Use Cases? \u00b6 The CR is one component in a more complex HIS architecture needed to accomplish important use cases, such as: Deduplicating patients Sometimes patients have multiple diagnostic results stored within a POS. The Client Registry will link patients based on configurable decision rules so multiple test results for the same patient can be found. Tracking patients lost to clinical care : EMRs are often not interoperable with one another, resulting in difficulty tracking patients as they move between facilities to seek care. A Client Registry will help data managers to track patients, decreasing instances of duplicate and incomplete records, patients LTFU, and sub-optimal care. Caution The Client Registry is not deduplicating or even touching patient clinical and demographic records within point-of-service systems. Instead, it provides a unique identifier to enable use cases like deduplication - which must be an external process. Architecture \u00b6 The Client Registry is not one application, instead it's a set of applications that work together in the Open Health Information Exchange (OpenHIE) architecture to serve point-of-service systems, like EMRs, insurance mechanisms, and labs. Caution This is not an OpenHIE product. It is a prototypical client registry to facilitate discussion among a broad set of stakeholders. The architecture is made up of: The Open Health Information Mediator (OpenHIM) : The OpenHIM is the entrypoint for POS systems, and includes authentication (are you who you say you are?), authorization (what roles do you have permission to fulfill?), and auditing of all transactions. The HAPI FHIR Server : HAPI is the reference FHIR server in Java and scalable into production environments. The ElasticSearch : Elasticsearch is a powerful search engine that is highly performant. An optional UI to view and break matches between records, and to select and chain together decision rules around matching algorithms.","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#summary","text":"A Client Registry holds patient identifers and may include patient demographic information. It is a necessary tool for the public health use cases that require managing patients, monitoring outcomes, and conducting case-based surveillance. Client Registries can be implemented in many ways. This implementation is an open source and open standards-based and offers the ability to: Assign and look-up unique identifiers, Allow connections from diverse point of service (POS) systems, such as electronic medical record systems (EMRs), that can submit messages in FHIR, and Configuration of decision rules around patient matching. Caution This implementation does not allow point-of-service systems to get patient demographic information stored in the Client Registry. This is also not a Shared Health Record, nor does it patient clinical data.","title":"Summary"},{"location":"#use-cases","text":"The CR is one component in a more complex HIS architecture needed to accomplish important use cases, such as: Deduplicating patients Sometimes patients have multiple diagnostic results stored within a POS. The Client Registry will link patients based on configurable decision rules so multiple test results for the same patient can be found. Tracking patients lost to clinical care : EMRs are often not interoperable with one another, resulting in difficulty tracking patients as they move between facilities to seek care. A Client Registry will help data managers to track patients, decreasing instances of duplicate and incomplete records, patients LTFU, and sub-optimal care. Caution The Client Registry is not deduplicating or even touching patient clinical and demographic records within point-of-service systems. Instead, it provides a unique identifier to enable use cases like deduplication - which must be an external process.","title":"Use Cases?"},{"location":"#architecture","text":"The Client Registry is not one application, instead it's a set of applications that work together in the Open Health Information Exchange (OpenHIE) architecture to serve point-of-service systems, like EMRs, insurance mechanisms, and labs. Caution This is not an OpenHIE product. It is a prototypical client registry to facilitate discussion among a broad set of stakeholders. The architecture is made up of: The Open Health Information Mediator (OpenHIM) : The OpenHIM is the entrypoint for POS systems, and includes authentication (are you who you say you are?), authorization (what roles do you have permission to fulfill?), and auditing of all transactions. The HAPI FHIR Server : HAPI is the reference FHIR server in Java and scalable into production environments. The ElasticSearch : Elasticsearch is a powerful search engine that is highly performant. An optional UI to view and break matches between records, and to select and chain together decision rules around matching algorithms.","title":"Architecture"},{"location":"contributing/","text":"Contributing \u00b6 There may be many areas of potential contribution as the Client Registry is not one application, it's several and can be more than that in your use case. It's recommended that you identify the specific feature or use case that needs support and For a quick question, reach out on the iHRIS Slack team. Sign up here: https://www.ihris.org/wp-login.php?action=slack-invitation For a bug or feature, reach out to the relevant repository to share the information. See the developer page for links to the different applications. For a broader discussion with others interested and with a background in Client Registry implementation science, please join the OpenHIE Client Registry Community calls and get involved.","title":"Contributing"},{"location":"contributing/#contributing","text":"There may be many areas of potential contribution as the Client Registry is not one application, it's several and can be more than that in your use case. It's recommended that you identify the specific feature or use case that needs support and For a quick question, reach out on the iHRIS Slack team. Sign up here: https://www.ihris.org/wp-login.php?action=slack-invitation For a bug or feature, reach out to the relevant repository to share the information. See the developer page for links to the different applications. For a broader discussion with others interested and with a background in Client Registry implementation science, please join the OpenHIE Client Registry Community calls and get involved.","title":"Contributing"},{"location":"decision_rules/","text":"Decision Rules \u00b6","title":"Decision Rules"},{"location":"decision_rules/#decision-rules","text":"","title":"Decision Rules"},{"location":"developer/","text":"","title":"Developer"},{"location":"get_started/","text":"Getting Started \u00b6 Note Regardless if you're just curious, an implementer, or a developer... please review the introduction before continuing. We tried to keep it short. I'm an implementer : The workflow and decision rules pages explain the basics and have links to resources to learn and teach others how to understand it and run it in an organization. I'm a developer or systems administrator : The developer pages goes into more detail about how to demo and deploy the Client Registry. I'm a contributor : This is a community project and meant for others to adopt to their use cases as they wish. The contributing page goes into how to make different types of contributions.","title":"Getting Started"},{"location":"get_started/#getting-started","text":"Note Regardless if you're just curious, an implementer, or a developer... please review the introduction before continuing. We tried to keep it short. I'm an implementer : The workflow and decision rules pages explain the basics and have links to resources to learn and teach others how to understand it and run it in an organization. I'm a developer or systems administrator : The developer pages goes into more detail about how to demo and deploy the Client Registry. I'm a contributor : This is a community project and meant for others to adopt to their use cases as they wish. The contributing page goes into how to make different types of contributions.","title":"Getting Started"},{"location":"workflow/","text":"Workflow \u00b6 Big picture \u00b6 The process for a point-of-service system like an EMR to get a unique ID from the Client Registry is straightforward though it looks complicated at first. Let's break this down. A POS provides some demographic information to the Client Registry. The Client Registry looks for an existing record matching that patient If there is an existing record, the Client Registry provides the unique ID back to the POS. If there is not a record, the Client Registry makes a new one and provides that back to the POS. Requirements \u00b6 In order for this process to work as expected, there are some requirements: Requests sent to the Client Registry must be made of FHIR messages. FHIR is a popular specification for accessing and an API for providing data in health systems. Messages must support FHIR R4. ...","title":"Workflow"},{"location":"workflow/#workflow","text":"","title":"Workflow"},{"location":"workflow/#big-picture","text":"The process for a point-of-service system like an EMR to get a unique ID from the Client Registry is straightforward though it looks complicated at first. Let's break this down. A POS provides some demographic information to the Client Registry. The Client Registry looks for an existing record matching that patient If there is an existing record, the Client Registry provides the unique ID back to the POS. If there is not a record, the Client Registry makes a new one and provides that back to the POS.","title":"Big picture"},{"location":"workflow/#requirements","text":"In order for this process to work as expected, there are some requirements: Requests sent to the Client Registry must be made of FHIR messages. FHIR is a popular specification for accessing and an API for providing data in health systems. Messages must support FHIR R4. ...","title":"Requirements"}]}